/*
 * 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package nl.esciencecenter.e3dchem.gpcrdb.client;

import nl.esciencecenter.e3dchem.gpcrdb.client.ApiCallback;
import nl.esciencecenter.e3dchem.gpcrdb.client.ApiClient;
import nl.esciencecenter.e3dchem.gpcrdb.client.ApiException;
import nl.esciencecenter.e3dchem.gpcrdb.client.ApiResponse;
import nl.esciencecenter.e3dchem.gpcrdb.client.Configuration;
import nl.esciencecenter.e3dchem.gpcrdb.client.Pair;
import nl.esciencecenter.e3dchem.gpcrdb.client.ProgressRequestBody;
import nl.esciencecenter.e3dchem.gpcrdb.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import nl.esciencecenter.e3dchem.gpcrdb.client.model.ProteinSimilarities;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ServicesalignmentApi {
    private ApiClient apiClient;

    public ServicesalignmentApi() {
        this(Configuration.getDefaultApiClient());
    }

    public ServicesalignmentApi(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return apiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    /**
     * Build call for familyAlignmentGET
     * @param slug  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call familyAlignmentGETCall(String slug, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/services/alignment/family/{slug}/"
            .replaceAll("\\{" + "slug" + "\\}", apiClient.escapeString(slug.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call familyAlignmentGETValidateBeforeCall(String slug, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'slug' is set
        if (slug == null) {
            throw new ApiException("Missing the required parameter 'slug' when calling familyAlignmentGET(Async)");
        }
        

        com.squareup.okhttp.Call call = familyAlignmentGETCall(slug, progressListener, progressRequestListener);
        return call;

    }

    /**
     * Get a full sequence alignment of a protein family including a consensus sequence
     * Get a full sequence alignment of a protein family including a consensus sequence&lt;br/&gt;/alignment/family/{slug}/&lt;br/&gt;{slug} is a protein family identifier, e.g. 001_001_001
     * @param slug  (required)
     * @return Object
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public Object familyAlignmentGET(String slug) throws ApiException {
        ApiResponse<Object> resp = familyAlignmentGETWithHttpInfo(slug);
        return resp.getData();
    }

    /**
     * Get a full sequence alignment of a protein family including a consensus sequence
     * Get a full sequence alignment of a protein family including a consensus sequence&lt;br/&gt;/alignment/family/{slug}/&lt;br/&gt;{slug} is a protein family identifier, e.g. 001_001_001
     * @param slug  (required)
     * @return ApiResponse&lt;Object&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Object> familyAlignmentGETWithHttpInfo(String slug) throws ApiException {
        com.squareup.okhttp.Call call = familyAlignmentGETValidateBeforeCall(slug, null, null);
        Type localVarReturnType = new TypeToken<Object>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get a full sequence alignment of a protein family including a consensus sequence (asynchronously)
     * Get a full sequence alignment of a protein family including a consensus sequence&lt;br/&gt;/alignment/family/{slug}/&lt;br/&gt;{slug} is a protein family identifier, e.g. 001_001_001
     * @param slug  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call familyAlignmentGETAsync(String slug, final ApiCallback<Object> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = familyAlignmentGETValidateBeforeCall(slug, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<Object>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for familyAlignmentGET_0
     * @param slug  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call familyAlignmentGET_0Call(String slug, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/services/alignment/family/{slug}/statistics/"
            .replaceAll("\\{" + "slug" + "\\}", apiClient.escapeString(slug.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call familyAlignmentGET_0ValidateBeforeCall(String slug, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'slug' is set
        if (slug == null) {
            throw new ApiException("Missing the required parameter 'slug' when calling familyAlignmentGET_0(Async)");
        }
        

        com.squareup.okhttp.Call call = familyAlignmentGET_0Call(slug, progressListener, progressRequestListener);
        return call;

    }

    /**
     * Get a full sequence alignment of a protein family including a consensus sequence
     * Get a full sequence alignment of a protein family including a consensus sequence&lt;br/&gt;/alignment/family/{slug}/&lt;br/&gt;{slug} is a protein family identifier, e.g. 001_001_001
     * @param slug  (required)
     * @return Object
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public Object familyAlignmentGET_0(String slug) throws ApiException {
        ApiResponse<Object> resp = familyAlignmentGET_0WithHttpInfo(slug);
        return resp.getData();
    }

    /**
     * Get a full sequence alignment of a protein family including a consensus sequence
     * Get a full sequence alignment of a protein family including a consensus sequence&lt;br/&gt;/alignment/family/{slug}/&lt;br/&gt;{slug} is a protein family identifier, e.g. 001_001_001
     * @param slug  (required)
     * @return ApiResponse&lt;Object&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Object> familyAlignmentGET_0WithHttpInfo(String slug) throws ApiException {
        com.squareup.okhttp.Call call = familyAlignmentGET_0ValidateBeforeCall(slug, null, null);
        Type localVarReturnType = new TypeToken<Object>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get a full sequence alignment of a protein family including a consensus sequence (asynchronously)
     * Get a full sequence alignment of a protein family including a consensus sequence&lt;br/&gt;/alignment/family/{slug}/&lt;br/&gt;{slug} is a protein family identifier, e.g. 001_001_001
     * @param slug  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call familyAlignmentGET_0Async(String slug, final ApiCallback<Object> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = familyAlignmentGET_0ValidateBeforeCall(slug, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<Object>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for familyAlignmentPartialGET
     * @param slug  (required)
     * @param segments  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call familyAlignmentPartialGETCall(String slug, String segments, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/services/alignment/family/{slug}/{segments}/"
            .replaceAll("\\{" + "slug" + "\\}", apiClient.escapeString(slug.toString()))
            .replaceAll("\\{" + "segments" + "\\}", apiClient.escapeString(segments.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call familyAlignmentPartialGETValidateBeforeCall(String slug, String segments, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'slug' is set
        if (slug == null) {
            throw new ApiException("Missing the required parameter 'slug' when calling familyAlignmentPartialGET(Async)");
        }
        
        // verify the required parameter 'segments' is set
        if (segments == null) {
            throw new ApiException("Missing the required parameter 'segments' when calling familyAlignmentPartialGET(Async)");
        }
        

        com.squareup.okhttp.Call call = familyAlignmentPartialGETCall(slug, segments, progressListener, progressRequestListener);
        return call;

    }

    /**
     * Get a partial sequence alignment of a protein family
     * Get a partial sequence alignment of a protein family&lt;br/&gt;/alignment/family/{slug}/{segments}/&lt;br/&gt;{slug} is a protein family identifier, e.g. 001_001_001&lt;br/&gt;{segments} is a comma separated list of protein segment identifiers and/ or     generic GPCRdb numbers, e.g. TM2,TM3,ECL2,4x50
     * @param slug  (required)
     * @param segments  (required)
     * @return Object
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public Object familyAlignmentPartialGET(String slug, String segments) throws ApiException {
        ApiResponse<Object> resp = familyAlignmentPartialGETWithHttpInfo(slug, segments);
        return resp.getData();
    }

    /**
     * Get a partial sequence alignment of a protein family
     * Get a partial sequence alignment of a protein family&lt;br/&gt;/alignment/family/{slug}/{segments}/&lt;br/&gt;{slug} is a protein family identifier, e.g. 001_001_001&lt;br/&gt;{segments} is a comma separated list of protein segment identifiers and/ or     generic GPCRdb numbers, e.g. TM2,TM3,ECL2,4x50
     * @param slug  (required)
     * @param segments  (required)
     * @return ApiResponse&lt;Object&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Object> familyAlignmentPartialGETWithHttpInfo(String slug, String segments) throws ApiException {
        com.squareup.okhttp.Call call = familyAlignmentPartialGETValidateBeforeCall(slug, segments, null, null);
        Type localVarReturnType = new TypeToken<Object>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get a partial sequence alignment of a protein family (asynchronously)
     * Get a partial sequence alignment of a protein family&lt;br/&gt;/alignment/family/{slug}/{segments}/&lt;br/&gt;{slug} is a protein family identifier, e.g. 001_001_001&lt;br/&gt;{segments} is a comma separated list of protein segment identifiers and/ or     generic GPCRdb numbers, e.g. TM2,TM3,ECL2,4x50
     * @param slug  (required)
     * @param segments  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call familyAlignmentPartialGETAsync(String slug, String segments, final ApiCallback<Object> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = familyAlignmentPartialGETValidateBeforeCall(slug, segments, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<Object>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for familyAlignmentPartialGET_0
     * @param slug  (required)
     * @param segments  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call familyAlignmentPartialGET_0Call(String slug, String segments, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/services/alignment/family/{slug}/{segments}/statistics/"
            .replaceAll("\\{" + "slug" + "\\}", apiClient.escapeString(slug.toString()))
            .replaceAll("\\{" + "segments" + "\\}", apiClient.escapeString(segments.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call familyAlignmentPartialGET_0ValidateBeforeCall(String slug, String segments, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'slug' is set
        if (slug == null) {
            throw new ApiException("Missing the required parameter 'slug' when calling familyAlignmentPartialGET_0(Async)");
        }
        
        // verify the required parameter 'segments' is set
        if (segments == null) {
            throw new ApiException("Missing the required parameter 'segments' when calling familyAlignmentPartialGET_0(Async)");
        }
        

        com.squareup.okhttp.Call call = familyAlignmentPartialGET_0Call(slug, segments, progressListener, progressRequestListener);
        return call;

    }

    /**
     * Get a partial sequence alignment of a protein family
     * Get a partial sequence alignment of a protein family&lt;br/&gt;/alignment/family/{slug}/{segments}/&lt;br/&gt;{slug} is a protein family identifier, e.g. 001_001_001&lt;br/&gt;{segments} is a comma separated list of protein segment identifiers and/ or     generic GPCRdb numbers, e.g. TM2,TM3,ECL2,4x50
     * @param slug  (required)
     * @param segments  (required)
     * @return Object
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public Object familyAlignmentPartialGET_0(String slug, String segments) throws ApiException {
        ApiResponse<Object> resp = familyAlignmentPartialGET_0WithHttpInfo(slug, segments);
        return resp.getData();
    }

    /**
     * Get a partial sequence alignment of a protein family
     * Get a partial sequence alignment of a protein family&lt;br/&gt;/alignment/family/{slug}/{segments}/&lt;br/&gt;{slug} is a protein family identifier, e.g. 001_001_001&lt;br/&gt;{segments} is a comma separated list of protein segment identifiers and/ or     generic GPCRdb numbers, e.g. TM2,TM3,ECL2,4x50
     * @param slug  (required)
     * @param segments  (required)
     * @return ApiResponse&lt;Object&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Object> familyAlignmentPartialGET_0WithHttpInfo(String slug, String segments) throws ApiException {
        com.squareup.okhttp.Call call = familyAlignmentPartialGET_0ValidateBeforeCall(slug, segments, null, null);
        Type localVarReturnType = new TypeToken<Object>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get a partial sequence alignment of a protein family (asynchronously)
     * Get a partial sequence alignment of a protein family&lt;br/&gt;/alignment/family/{slug}/{segments}/&lt;br/&gt;{slug} is a protein family identifier, e.g. 001_001_001&lt;br/&gt;{segments} is a comma separated list of protein segment identifiers and/ or     generic GPCRdb numbers, e.g. TM2,TM3,ECL2,4x50
     * @param slug  (required)
     * @param segments  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call familyAlignmentPartialGET_0Async(String slug, String segments, final ApiCallback<Object> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = familyAlignmentPartialGET_0ValidateBeforeCall(slug, segments, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<Object>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for familyAlignmentPartialSpeciesGET
     * @param slug  (required)
     * @param segments  (required)
     * @param latinName  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call familyAlignmentPartialSpeciesGETCall(String slug, String segments, String latinName, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/services/alignment/family/{slug}/{segments}/{latin_name}/"
            .replaceAll("\\{" + "slug" + "\\}", apiClient.escapeString(slug.toString()))
            .replaceAll("\\{" + "segments" + "\\}", apiClient.escapeString(segments.toString()))
            .replaceAll("\\{" + "latin_name" + "\\}", apiClient.escapeString(latinName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call familyAlignmentPartialSpeciesGETValidateBeforeCall(String slug, String segments, String latinName, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'slug' is set
        if (slug == null) {
            throw new ApiException("Missing the required parameter 'slug' when calling familyAlignmentPartialSpeciesGET(Async)");
        }
        
        // verify the required parameter 'segments' is set
        if (segments == null) {
            throw new ApiException("Missing the required parameter 'segments' when calling familyAlignmentPartialSpeciesGET(Async)");
        }
        
        // verify the required parameter 'latinName' is set
        if (latinName == null) {
            throw new ApiException("Missing the required parameter 'latinName' when calling familyAlignmentPartialSpeciesGET(Async)");
        }
        

        com.squareup.okhttp.Call call = familyAlignmentPartialSpeciesGETCall(slug, segments, latinName, progressListener, progressRequestListener);
        return call;

    }

    /**
     * Get a partial sequence alignment of a protein family
     * Get a partial sequence alignment of a protein family&lt;br/&gt;/alignment/family/{slug}/{segments}/{species}&lt;br/&gt;{slug} is a protein family identifier, e.g. 001_001_001&lt;br/&gt;{segments} is a comma separated list of protein segment identifiers and/ or     generic GPCRdb numbers, e.g. TM2,TM3,ECL2,4x50&lt;br/&gt;{species} is a species identifier from Uniprot, e.g. Homo sapiens
     * @param slug  (required)
     * @param segments  (required)
     * @param latinName  (required)
     * @return Object
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public Object familyAlignmentPartialSpeciesGET(String slug, String segments, String latinName) throws ApiException {
        ApiResponse<Object> resp = familyAlignmentPartialSpeciesGETWithHttpInfo(slug, segments, latinName);
        return resp.getData();
    }

    /**
     * Get a partial sequence alignment of a protein family
     * Get a partial sequence alignment of a protein family&lt;br/&gt;/alignment/family/{slug}/{segments}/{species}&lt;br/&gt;{slug} is a protein family identifier, e.g. 001_001_001&lt;br/&gt;{segments} is a comma separated list of protein segment identifiers and/ or     generic GPCRdb numbers, e.g. TM2,TM3,ECL2,4x50&lt;br/&gt;{species} is a species identifier from Uniprot, e.g. Homo sapiens
     * @param slug  (required)
     * @param segments  (required)
     * @param latinName  (required)
     * @return ApiResponse&lt;Object&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Object> familyAlignmentPartialSpeciesGETWithHttpInfo(String slug, String segments, String latinName) throws ApiException {
        com.squareup.okhttp.Call call = familyAlignmentPartialSpeciesGETValidateBeforeCall(slug, segments, latinName, null, null);
        Type localVarReturnType = new TypeToken<Object>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get a partial sequence alignment of a protein family (asynchronously)
     * Get a partial sequence alignment of a protein family&lt;br/&gt;/alignment/family/{slug}/{segments}/{species}&lt;br/&gt;{slug} is a protein family identifier, e.g. 001_001_001&lt;br/&gt;{segments} is a comma separated list of protein segment identifiers and/ or     generic GPCRdb numbers, e.g. TM2,TM3,ECL2,4x50&lt;br/&gt;{species} is a species identifier from Uniprot, e.g. Homo sapiens
     * @param slug  (required)
     * @param segments  (required)
     * @param latinName  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call familyAlignmentPartialSpeciesGETAsync(String slug, String segments, String latinName, final ApiCallback<Object> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = familyAlignmentPartialSpeciesGETValidateBeforeCall(slug, segments, latinName, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<Object>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for familyAlignmentPartialSpeciesGET_0
     * @param slug  (required)
     * @param segments  (required)
     * @param latinName  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call familyAlignmentPartialSpeciesGET_0Call(String slug, String segments, String latinName, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/services/alignment/family/{slug}/{segments}/{latin_name}/statistics/"
            .replaceAll("\\{" + "slug" + "\\}", apiClient.escapeString(slug.toString()))
            .replaceAll("\\{" + "segments" + "\\}", apiClient.escapeString(segments.toString()))
            .replaceAll("\\{" + "latin_name" + "\\}", apiClient.escapeString(latinName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call familyAlignmentPartialSpeciesGET_0ValidateBeforeCall(String slug, String segments, String latinName, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'slug' is set
        if (slug == null) {
            throw new ApiException("Missing the required parameter 'slug' when calling familyAlignmentPartialSpeciesGET_0(Async)");
        }
        
        // verify the required parameter 'segments' is set
        if (segments == null) {
            throw new ApiException("Missing the required parameter 'segments' when calling familyAlignmentPartialSpeciesGET_0(Async)");
        }
        
        // verify the required parameter 'latinName' is set
        if (latinName == null) {
            throw new ApiException("Missing the required parameter 'latinName' when calling familyAlignmentPartialSpeciesGET_0(Async)");
        }
        

        com.squareup.okhttp.Call call = familyAlignmentPartialSpeciesGET_0Call(slug, segments, latinName, progressListener, progressRequestListener);
        return call;

    }

    /**
     * Get a partial sequence alignment of a protein family
     * Get a partial sequence alignment of a protein family&lt;br/&gt;/alignment/family/{slug}/{segments}/{species}&lt;br/&gt;{slug} is a protein family identifier, e.g. 001_001_001&lt;br/&gt;{segments} is a comma separated list of protein segment identifiers and/ or     generic GPCRdb numbers, e.g. TM2,TM3,ECL2,4x50&lt;br/&gt;{species} is a species identifier from Uniprot, e.g. Homo sapiens
     * @param slug  (required)
     * @param segments  (required)
     * @param latinName  (required)
     * @return Object
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public Object familyAlignmentPartialSpeciesGET_0(String slug, String segments, String latinName) throws ApiException {
        ApiResponse<Object> resp = familyAlignmentPartialSpeciesGET_0WithHttpInfo(slug, segments, latinName);
        return resp.getData();
    }

    /**
     * Get a partial sequence alignment of a protein family
     * Get a partial sequence alignment of a protein family&lt;br/&gt;/alignment/family/{slug}/{segments}/{species}&lt;br/&gt;{slug} is a protein family identifier, e.g. 001_001_001&lt;br/&gt;{segments} is a comma separated list of protein segment identifiers and/ or     generic GPCRdb numbers, e.g. TM2,TM3,ECL2,4x50&lt;br/&gt;{species} is a species identifier from Uniprot, e.g. Homo sapiens
     * @param slug  (required)
     * @param segments  (required)
     * @param latinName  (required)
     * @return ApiResponse&lt;Object&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Object> familyAlignmentPartialSpeciesGET_0WithHttpInfo(String slug, String segments, String latinName) throws ApiException {
        com.squareup.okhttp.Call call = familyAlignmentPartialSpeciesGET_0ValidateBeforeCall(slug, segments, latinName, null, null);
        Type localVarReturnType = new TypeToken<Object>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get a partial sequence alignment of a protein family (asynchronously)
     * Get a partial sequence alignment of a protein family&lt;br/&gt;/alignment/family/{slug}/{segments}/{species}&lt;br/&gt;{slug} is a protein family identifier, e.g. 001_001_001&lt;br/&gt;{segments} is a comma separated list of protein segment identifiers and/ or     generic GPCRdb numbers, e.g. TM2,TM3,ECL2,4x50&lt;br/&gt;{species} is a species identifier from Uniprot, e.g. Homo sapiens
     * @param slug  (required)
     * @param segments  (required)
     * @param latinName  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call familyAlignmentPartialSpeciesGET_0Async(String slug, String segments, String latinName, final ApiCallback<Object> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = familyAlignmentPartialSpeciesGET_0ValidateBeforeCall(slug, segments, latinName, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<Object>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for proteinAlignmentGET
     * @param proteins  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call proteinAlignmentGETCall(String proteins, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/services/alignment/protein/{proteins}/"
            .replaceAll("\\{" + "proteins" + "\\}", apiClient.escapeString(proteins.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call proteinAlignmentGETValidateBeforeCall(String proteins, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'proteins' is set
        if (proteins == null) {
            throw new ApiException("Missing the required parameter 'proteins' when calling proteinAlignmentGET(Async)");
        }
        

        com.squareup.okhttp.Call call = proteinAlignmentGETCall(proteins, progressListener, progressRequestListener);
        return call;

    }

    /**
     * Get a full sequence alignment of two or more proteins
     * Get a full sequence alignment of two or more proteins&lt;br/&gt;/alignment/protein/{proteins}/&lt;br/&gt;{proteins} is a comma separated list of protein identifiers, e.g. adrb2_human,5ht2a_human
     * @param proteins  (required)
     * @return Object
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public Object proteinAlignmentGET(String proteins) throws ApiException {
        ApiResponse<Object> resp = proteinAlignmentGETWithHttpInfo(proteins);
        return resp.getData();
    }

    /**
     * Get a full sequence alignment of two or more proteins
     * Get a full sequence alignment of two or more proteins&lt;br/&gt;/alignment/protein/{proteins}/&lt;br/&gt;{proteins} is a comma separated list of protein identifiers, e.g. adrb2_human,5ht2a_human
     * @param proteins  (required)
     * @return ApiResponse&lt;Object&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Object> proteinAlignmentGETWithHttpInfo(String proteins) throws ApiException {
        com.squareup.okhttp.Call call = proteinAlignmentGETValidateBeforeCall(proteins, null, null);
        Type localVarReturnType = new TypeToken<Object>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get a full sequence alignment of two or more proteins (asynchronously)
     * Get a full sequence alignment of two or more proteins&lt;br/&gt;/alignment/protein/{proteins}/&lt;br/&gt;{proteins} is a comma separated list of protein identifiers, e.g. adrb2_human,5ht2a_human
     * @param proteins  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call proteinAlignmentGETAsync(String proteins, final ApiCallback<Object> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = proteinAlignmentGETValidateBeforeCall(proteins, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<Object>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for proteinAlignmentPartialGET
     * @param proteins  (required)
     * @param segments  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call proteinAlignmentPartialGETCall(String proteins, String segments, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/services/alignment/protein/{proteins}/{segments}/"
            .replaceAll("\\{" + "proteins" + "\\}", apiClient.escapeString(proteins.toString()))
            .replaceAll("\\{" + "segments" + "\\}", apiClient.escapeString(segments.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call proteinAlignmentPartialGETValidateBeforeCall(String proteins, String segments, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'proteins' is set
        if (proteins == null) {
            throw new ApiException("Missing the required parameter 'proteins' when calling proteinAlignmentPartialGET(Async)");
        }
        
        // verify the required parameter 'segments' is set
        if (segments == null) {
            throw new ApiException("Missing the required parameter 'segments' when calling proteinAlignmentPartialGET(Async)");
        }
        

        com.squareup.okhttp.Call call = proteinAlignmentPartialGETCall(proteins, segments, progressListener, progressRequestListener);
        return call;

    }

    /**
     * Get a partial sequence alignment of two or more proteins
     * Get a partial sequence alignment of two or more proteins&lt;br/&gt;/alignment/protein/{proteins}/{segments}/&lt;br/&gt;{proteins} is a comma separated list of protein identifiers, e.g. adrb2_human,5ht2a_human&lt;br/&gt;{segments} is a comma separated list of protein segment identifiers and/ or     generic GPCRdb numbers, e.g. TM2,TM3,ECL2,4x50
     * @param proteins  (required)
     * @param segments  (required)
     * @return Object
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public Object proteinAlignmentPartialGET(String proteins, String segments) throws ApiException {
        ApiResponse<Object> resp = proteinAlignmentPartialGETWithHttpInfo(proteins, segments);
        return resp.getData();
    }

    /**
     * Get a partial sequence alignment of two or more proteins
     * Get a partial sequence alignment of two or more proteins&lt;br/&gt;/alignment/protein/{proteins}/{segments}/&lt;br/&gt;{proteins} is a comma separated list of protein identifiers, e.g. adrb2_human,5ht2a_human&lt;br/&gt;{segments} is a comma separated list of protein segment identifiers and/ or     generic GPCRdb numbers, e.g. TM2,TM3,ECL2,4x50
     * @param proteins  (required)
     * @param segments  (required)
     * @return ApiResponse&lt;Object&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Object> proteinAlignmentPartialGETWithHttpInfo(String proteins, String segments) throws ApiException {
        com.squareup.okhttp.Call call = proteinAlignmentPartialGETValidateBeforeCall(proteins, segments, null, null);
        Type localVarReturnType = new TypeToken<Object>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get a partial sequence alignment of two or more proteins (asynchronously)
     * Get a partial sequence alignment of two or more proteins&lt;br/&gt;/alignment/protein/{proteins}/{segments}/&lt;br/&gt;{proteins} is a comma separated list of protein identifiers, e.g. adrb2_human,5ht2a_human&lt;br/&gt;{segments} is a comma separated list of protein segment identifiers and/ or     generic GPCRdb numbers, e.g. TM2,TM3,ECL2,4x50
     * @param proteins  (required)
     * @param segments  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call proteinAlignmentPartialGETAsync(String proteins, String segments, final ApiCallback<Object> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = proteinAlignmentPartialGETValidateBeforeCall(proteins, segments, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<Object>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for proteinAlignmentStatisticsGET
     * @param proteins  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call proteinAlignmentStatisticsGETCall(String proteins, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/services/alignment/protein/{proteins}/statistics/"
            .replaceAll("\\{" + "proteins" + "\\}", apiClient.escapeString(proteins.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call proteinAlignmentStatisticsGETValidateBeforeCall(String proteins, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'proteins' is set
        if (proteins == null) {
            throw new ApiException("Missing the required parameter 'proteins' when calling proteinAlignmentStatisticsGET(Async)");
        }
        

        com.squareup.okhttp.Call call = proteinAlignmentStatisticsGETCall(proteins, progressListener, progressRequestListener);
        return call;

    }

    /**
     * Add a /statics at the end of an alignment in order to
     * Add a /statics at the end of an alignment in order to      receive an additional residue property statistics output e.g.:&lt;br/&gt;/alignment/protein/{proteins}/{segments}/statistics&lt;br/&gt;{proteins} is a comma separated list of protein identifiers, e.g. adrb2_human,5ht2a_human&lt;br/&gt;{segments} is a comma separated list of protein segment identifiers and/ or     generic GPCRdb numbers, e.g. TM2,TM3,ECL2,4x50
     * @param proteins  (required)
     * @return Object
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public Object proteinAlignmentStatisticsGET(String proteins) throws ApiException {
        ApiResponse<Object> resp = proteinAlignmentStatisticsGETWithHttpInfo(proteins);
        return resp.getData();
    }

    /**
     * Add a /statics at the end of an alignment in order to
     * Add a /statics at the end of an alignment in order to      receive an additional residue property statistics output e.g.:&lt;br/&gt;/alignment/protein/{proteins}/{segments}/statistics&lt;br/&gt;{proteins} is a comma separated list of protein identifiers, e.g. adrb2_human,5ht2a_human&lt;br/&gt;{segments} is a comma separated list of protein segment identifiers and/ or     generic GPCRdb numbers, e.g. TM2,TM3,ECL2,4x50
     * @param proteins  (required)
     * @return ApiResponse&lt;Object&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Object> proteinAlignmentStatisticsGETWithHttpInfo(String proteins) throws ApiException {
        com.squareup.okhttp.Call call = proteinAlignmentStatisticsGETValidateBeforeCall(proteins, null, null);
        Type localVarReturnType = new TypeToken<Object>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Add a /statics at the end of an alignment in order to (asynchronously)
     * Add a /statics at the end of an alignment in order to      receive an additional residue property statistics output e.g.:&lt;br/&gt;/alignment/protein/{proteins}/{segments}/statistics&lt;br/&gt;{proteins} is a comma separated list of protein identifiers, e.g. adrb2_human,5ht2a_human&lt;br/&gt;{segments} is a comma separated list of protein segment identifiers and/ or     generic GPCRdb numbers, e.g. TM2,TM3,ECL2,4x50
     * @param proteins  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call proteinAlignmentStatisticsGETAsync(String proteins, final ApiCallback<Object> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = proteinAlignmentStatisticsGETValidateBeforeCall(proteins, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<Object>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for proteinAlignmentStatisticsGET_0
     * @param proteins  (required)
     * @param segments  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call proteinAlignmentStatisticsGET_0Call(String proteins, String segments, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/services/alignment/protein/{proteins}/{segments}/statistics/"
            .replaceAll("\\{" + "proteins" + "\\}", apiClient.escapeString(proteins.toString()))
            .replaceAll("\\{" + "segments" + "\\}", apiClient.escapeString(segments.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call proteinAlignmentStatisticsGET_0ValidateBeforeCall(String proteins, String segments, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'proteins' is set
        if (proteins == null) {
            throw new ApiException("Missing the required parameter 'proteins' when calling proteinAlignmentStatisticsGET_0(Async)");
        }
        
        // verify the required parameter 'segments' is set
        if (segments == null) {
            throw new ApiException("Missing the required parameter 'segments' when calling proteinAlignmentStatisticsGET_0(Async)");
        }
        

        com.squareup.okhttp.Call call = proteinAlignmentStatisticsGET_0Call(proteins, segments, progressListener, progressRequestListener);
        return call;

    }

    /**
     * Add a /statics at the end of an alignment in order to
     * Add a /statics at the end of an alignment in order to      receive an additional residue property statistics output e.g.:&lt;br/&gt;/alignment/protein/{proteins}/{segments}/statistics&lt;br/&gt;{proteins} is a comma separated list of protein identifiers, e.g. adrb2_human,5ht2a_human&lt;br/&gt;{segments} is a comma separated list of protein segment identifiers and/ or     generic GPCRdb numbers, e.g. TM2,TM3,ECL2,4x50
     * @param proteins  (required)
     * @param segments  (required)
     * @return Object
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public Object proteinAlignmentStatisticsGET_0(String proteins, String segments) throws ApiException {
        ApiResponse<Object> resp = proteinAlignmentStatisticsGET_0WithHttpInfo(proteins, segments);
        return resp.getData();
    }

    /**
     * Add a /statics at the end of an alignment in order to
     * Add a /statics at the end of an alignment in order to      receive an additional residue property statistics output e.g.:&lt;br/&gt;/alignment/protein/{proteins}/{segments}/statistics&lt;br/&gt;{proteins} is a comma separated list of protein identifiers, e.g. adrb2_human,5ht2a_human&lt;br/&gt;{segments} is a comma separated list of protein segment identifiers and/ or     generic GPCRdb numbers, e.g. TM2,TM3,ECL2,4x50
     * @param proteins  (required)
     * @param segments  (required)
     * @return ApiResponse&lt;Object&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Object> proteinAlignmentStatisticsGET_0WithHttpInfo(String proteins, String segments) throws ApiException {
        com.squareup.okhttp.Call call = proteinAlignmentStatisticsGET_0ValidateBeforeCall(proteins, segments, null, null);
        Type localVarReturnType = new TypeToken<Object>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Add a /statics at the end of an alignment in order to (asynchronously)
     * Add a /statics at the end of an alignment in order to      receive an additional residue property statistics output e.g.:&lt;br/&gt;/alignment/protein/{proteins}/{segments}/statistics&lt;br/&gt;{proteins} is a comma separated list of protein identifiers, e.g. adrb2_human,5ht2a_human&lt;br/&gt;{segments} is a comma separated list of protein segment identifiers and/ or     generic GPCRdb numbers, e.g. TM2,TM3,ECL2,4x50
     * @param proteins  (required)
     * @param segments  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call proteinAlignmentStatisticsGET_0Async(String proteins, String segments, final ApiCallback<Object> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = proteinAlignmentStatisticsGET_0ValidateBeforeCall(proteins, segments, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<Object>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for proteinSimilaritySearchAlignmentGET
     * @param proteins  (required)
     * @param segments  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call proteinSimilaritySearchAlignmentGETCall(String proteins, String segments, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/services/alignment/similarity/{proteins}/{segments}/"
            .replaceAll("\\{" + "proteins" + "\\}", apiClient.escapeString(proteins.toString()))
            .replaceAll("\\{" + "segments" + "\\}", apiClient.escapeString(segments.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call proteinSimilaritySearchAlignmentGETValidateBeforeCall(String proteins, String segments, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'proteins' is set
        if (proteins == null) {
            throw new ApiException("Missing the required parameter 'proteins' when calling proteinSimilaritySearchAlignmentGET(Async)");
        }
        
        // verify the required parameter 'segments' is set
        if (segments == null) {
            throw new ApiException("Missing the required parameter 'segments' when calling proteinSimilaritySearchAlignmentGET(Async)");
        }
        

        com.squareup.okhttp.Call call = proteinSimilaritySearchAlignmentGETCall(proteins, segments, progressListener, progressRequestListener);
        return call;

    }

    /**
     * Get a segment sequence alignment of two or more proteins ranked by similarity
     * Get a segment sequence alignment of two or more proteins ranked by similarity&lt;br/&gt;/alignment/similarity/{proteins}/&lt;br/&gt;{proteins} is a comma separated list of protein identifiers, e.g. adrb2_human,5ht2a_human,cxcr4_human,     where the first protein is the query protein and the following the proteins to compare it to&lt;br/&gt;{segments} is a comma separated list of protein segment identifiers and/ or     generic GPCRdb numbers, e.g. TM2,TM3,ECL2,4x50
     * @param proteins  (required)
     * @param segments  (required)
     * @return ProteinSimilarities
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ProteinSimilarities proteinSimilaritySearchAlignmentGET(String proteins, String segments) throws ApiException {
        ApiResponse<ProteinSimilarities> resp = proteinSimilaritySearchAlignmentGETWithHttpInfo(proteins, segments);
        return resp.getData();
    }

    /**
     * Get a segment sequence alignment of two or more proteins ranked by similarity
     * Get a segment sequence alignment of two or more proteins ranked by similarity&lt;br/&gt;/alignment/similarity/{proteins}/&lt;br/&gt;{proteins} is a comma separated list of protein identifiers, e.g. adrb2_human,5ht2a_human,cxcr4_human,     where the first protein is the query protein and the following the proteins to compare it to&lt;br/&gt;{segments} is a comma separated list of protein segment identifiers and/ or     generic GPCRdb numbers, e.g. TM2,TM3,ECL2,4x50
     * @param proteins  (required)
     * @param segments  (required)
     * @return ApiResponse&lt;ProteinSimilarities&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<ProteinSimilarities> proteinSimilaritySearchAlignmentGETWithHttpInfo(String proteins, String segments) throws ApiException {
        com.squareup.okhttp.Call call = proteinSimilaritySearchAlignmentGETValidateBeforeCall(proteins, segments, null, null);
        Type localVarReturnType = new TypeToken<ProteinSimilarities>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get a segment sequence alignment of two or more proteins ranked by similarity (asynchronously)
     * Get a segment sequence alignment of two or more proteins ranked by similarity&lt;br/&gt;/alignment/similarity/{proteins}/&lt;br/&gt;{proteins} is a comma separated list of protein identifiers, e.g. adrb2_human,5ht2a_human,cxcr4_human,     where the first protein is the query protein and the following the proteins to compare it to&lt;br/&gt;{segments} is a comma separated list of protein segment identifiers and/ or     generic GPCRdb numbers, e.g. TM2,TM3,ECL2,4x50
     * @param proteins  (required)
     * @param segments  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call proteinSimilaritySearchAlignmentGETAsync(String proteins, String segments, final ApiCallback<ProteinSimilarities> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = proteinSimilaritySearchAlignmentGETValidateBeforeCall(proteins, segments, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<ProteinSimilarities>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
}
